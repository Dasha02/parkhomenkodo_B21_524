# -*- coding: utf-8 -*-
"""PAVI-Laba1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WwWPG_wJOGTQpqZ8f6kdaTqCCut7gJOH
"""


from PIL import Image
import numpy as np


def interpolate_image(image, scale_factor):
    width, height = image.shape[1], image.shape[0]
    new_width, new_height = int(width * scale_factor), int(height * scale_factor)
    resized_image = np.zeros((new_height, new_width, image.shape[2]), dtype=np.uint8)
    for i in range(new_height):
        for j in range(new_width):
            x, y = int(j / scale_factor), int(i / scale_factor)
            pixel = image[y, x]
            resized_image[i, j] = pixel
    return resized_image


def decimate_image(image, scale_factor):
    width, height = image.shape[1], image.shape[0]
    new_width, new_height = int(width / scale_factor), int(height / scale_factor)
    resized_image = np.zeros((new_height, new_width, image.shape[2]), dtype=np.uint8)
    for i in range(new_height):
        for j in range(new_width):
            x, y = int(j * scale_factor), int(i * scale_factor)
            pixel = image[y, x]
            resized_image[i, j] = pixel
    return resized_image


def resample_image(image, m, n):
    intermediate_image = interpolate_image(image, m)
    resampled_image = decimate_image(intermediate_image, n)
    return resampled_image


def resample_image_single_pass(image, k):
    width, height = image.shape[1], image.shape[0]
    new_width, new_height = int(width * k), int(height * k)
    resized_image = np.zeros((new_height, new_width, image.shape[2]), dtype=np.uint8)
    for i in range(new_height):
        for j in range(new_width):
            x, y = int(j / k), int(i / k)
            pixel = image[y, x]
            resized_image[i, j] = pixel
    return resized_image



def main(smth=None):
    image = np.array(Image.open('space1.png'))

    resized_image = interpolate_image(image, 2)
    Image.fromarray(resized_image).save('resized_image_interpolated1.png')

    resized_image = decimate_image(image, 3)
    Image.fromarray(resized_image).save('resized_image_decimated1.png')

    resampled_image = resample_image(image, 2, 3)
    Image.fromarray(resampled_image).save('resampled_image1.png')

    resampled_image = resample_image_single_pass(image, 1.5)
    Image.fromarray(resampled_image).save('resampled_image_single_pass1.png')


if __name__ == "__main__":
    main()
